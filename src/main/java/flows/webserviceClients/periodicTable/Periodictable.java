package flows.webserviceClients.periodicTable;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.0-milestone2
 * 2014-03-14T14:08:52.222+05:30
 * Generated source version: 3.0.0-milestone2
 * 
 */
@WebServiceClient(name = "periodictable", 
                  wsdlLocation = "http://www.webservicex.net/periodictable.asmx?WSDL",
                  targetNamespace = "http://www.webserviceX.NET") 
public class Periodictable extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.webserviceX.NET", "periodictable");
    public final static QName PeriodictableHttpGet = new QName("http://www.webserviceX.NET", "periodictableHttpGet");
    public final static QName PeriodictableSoap12 = new QName("http://www.webserviceX.NET", "periodictableSoap12");
    public final static QName PeriodictableSoap = new QName("http://www.webserviceX.NET", "periodictableSoap");
    public final static QName PeriodictableHttpPost = new QName("http://www.webserviceX.NET", "periodictableHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("http://www.webservicex.net/periodictable.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Periodictable.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://www.webservicex.net/periodictable.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public Periodictable(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Periodictable(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Periodictable() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns PeriodictableHttpGet
     */
    @WebEndpoint(name = "periodictableHttpGet")
    public PeriodictableHttpGet getPeriodictableHttpGet() {
        return super.getPort(PeriodictableHttpGet, PeriodictableHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PeriodictableHttpGet
     */
    @WebEndpoint(name = "periodictableHttpGet")
    public PeriodictableHttpGet getPeriodictableHttpGet(WebServiceFeature... features) {
        return super.getPort(PeriodictableHttpGet, PeriodictableHttpGet.class, features);
    }
    /**
     *
     * @return
     *     returns PeriodictableSoap
     */
    @WebEndpoint(name = "periodictableSoap12")
    public PeriodictableSoap getPeriodictableSoap12() {
        return super.getPort(PeriodictableSoap12, PeriodictableSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PeriodictableSoap
     */
    @WebEndpoint(name = "periodictableSoap12")
    public PeriodictableSoap getPeriodictableSoap12(WebServiceFeature... features) {
        return super.getPort(PeriodictableSoap12, PeriodictableSoap.class, features);
    }
    /**
     *
     * @return
     *     returns PeriodictableSoap
     */
    @WebEndpoint(name = "periodictableSoap")
    public PeriodictableSoap getPeriodictableSoap() {
        return super.getPort(PeriodictableSoap, PeriodictableSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PeriodictableSoap
     */
    @WebEndpoint(name = "periodictableSoap")
    public PeriodictableSoap getPeriodictableSoap(WebServiceFeature... features) {
        return super.getPort(PeriodictableSoap, PeriodictableSoap.class, features);
    }
    /**
     *
     * @return
     *     returns PeriodictableHttpPost
     */
    @WebEndpoint(name = "periodictableHttpPost")
    public PeriodictableHttpPost getPeriodictableHttpPost() {
        return super.getPort(PeriodictableHttpPost, PeriodictableHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PeriodictableHttpPost
     */
    @WebEndpoint(name = "periodictableHttpPost")
    public PeriodictableHttpPost getPeriodictableHttpPost(WebServiceFeature... features) {
        return super.getPort(PeriodictableHttpPost, PeriodictableHttpPost.class, features);
    }

}
