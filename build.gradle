import com.sun.tools.javac.resources.compiler

apply plugin: 'java'

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['-f', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources',
                    '-f', 'html:build/reports/cucumber-html-report', '-f', 'junit:build/reports/cucumber-junit-report' +
                    '.xml']
        }
    }
}

def wsdlList() {
    def globalWeatherWSDL = [name: "globalWeather", url: "http://www.webservicex.com/globalweather.asmx?WSDL"]
    def currencyConvertorWSDL = [name: "currencyConvertor", url: "http://www.webservicex.net/CurrencyConvertor.asmx?WSDL"]
    [globalWeatherWSDL, currencyConvertorWSDL]
}

task buildWSClients() {
    wsdlList().each() {
        eachWSDLHash ->
            def name = eachWSDLHash.name
            def url = eachWSDLHash.url
            println "Creating Java Classes for WSDL: ${name} available at: ${url}"
            doLast {
                exec {
                    executable = 'wsimport'
                    args = ['-keep','-verbose', '-Xnocompile',  '-extension','-d','src/main/java','-p', 'flows.webserviceClients.' + name+ '.net.webservices',
                            url]
                }
            }
    };
}

dependencies {
    compile fileTree(dir: 'lib', include: ['*.jar'])
}
