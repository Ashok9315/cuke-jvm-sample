apply plugin: 'java'
apply plugin: 'idea'

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

def defaultCukeArgs = ['--format', 'pretty',
        '--glue', 'gradle/cucumber', 'src/test/resources',
        '--format', 'html:build/reports/cucumber-html-report',
        '--format', 'junit:build/reports/cucumber-junit-report.xml']

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        println("All:")
        runTest(defaultCukeArgs)
    }
}

task cucumberws() {
    dependsOn assemble, compileTestJava
    doLast {
        println("WS:")
        runTest(defaultCukeArgs + ['--tags', '@webservice'])
    }
}

task cucumberui() {
    dependsOn assemble, compileTestJava
    doLast {
        println("UI:")
        runTest(defaultCukeArgs + ['--tags', '@browser'])
    }
}

task cucumberjson() {
    dependsOn assemble, compileTestJava
    doLast {
        println("Json:")
        runTest(defaultCukeArgs + ['--tags', '@json'])
    }
}

def runTest(cukeArgs) {
println "** Cucumber arguments: " +cukeArgs
    javaexec {
        main = "cucumber.api.cli.Main"
        classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
        args = cukeArgs
    }
}

def wsdlList() {
    def globalWeatherWSDL = [name: "globalWeather", url: "http://www.webservicex.com/globalweather.asmx?WSDL"]
    def currencyConvertorWSDL = [name: "currencyConvertor", url: "http://www.webservicex.net/CurrencyConvertor.asmx?WSDL"]
    def periodicTableWSDL = [name: "periodicTable", url: "http://www.webservicex.net/periodictable.asmx?WSDL"]
//    [globalWeatherWSDL, currencyConvertorWSDL, periodicTableWSDL]
    []
}

task buildWSClients() {
    wsdlList().each() {
        eachWSDLHash ->
            def name = eachWSDLHash.name
            def url = eachWSDLHash.url
            println "Creating Java Classes for WSDL: ${name} available at: ${url}"
            doLast {
                javaexec {
                    main = "org.apache.cxf.tools.wsdlto.WSDLToJava"
                    classpath = configurations.runtime
                    args = ['-validate', '-keep', '-client', '-d', 'src/main/java/flows/webserviceClients/' +
                            name,
                            url]
                }
            }
    };
}

dependencies {
    compile fileTree(dir: 'lib', include: ['*.jar'])
    runtime fileTree(dir: 'lib/cxf', include: '**/*.jar')
}